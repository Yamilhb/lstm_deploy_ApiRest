# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python.

# For the understanding of the file, look tox.ini of the 1.construction or 2.packaging directories.

[pytest]
log_cli_level=WARNING

[tox]
min_version = 4
envlist = test_app#, checks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}
basepython = /home/y41000/miniconda3/envs/tensorfl/bin/python # By default, the python was 3.10, diferent than the python of the package: PROBLEMS, A LOT.

[testenv:test_app]
deps =
	-rtest_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	python -m pip install ./basic-lstm-model-1.0.0.tar.gz
	pytest \
	-vv \
	{posargs:app/tests/}


[testenv:run_now]
envdir = {toxworkdir}/test_app
deps =
	{[testenv:test_app]deps}

setenv =
	{[testenv:test_app]setenv}

commands=
	python -m pip install ./basic-lstm-model-1.0.0.tar.gz
	python app/main.py


#[testenv:checks]
#envdir = {toxworkdir}/checks
#deps =
#	-r{toxinidir}/typing_requirements.txt
#commands =
#	flake8 app
#	isort app
#	black app
#	{posargs:mypy app}


[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 88